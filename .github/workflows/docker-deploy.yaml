name: Build and Deploy Docker Image

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: deploy-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.event.action != 'closed') || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    environment: dockerhub

    steps:
      - name: Checkout repository üõí
        uses: actions/checkout@v3

      - name: Log in to Docker Hub üîê
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx ‚öôÔ∏è
        uses: docker/setup-buildx-action@v2

      - name: Set IMAGE_TAG ‚öôÔ∏è
        id: set_image_tag
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_TAG=main" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=pr-${{ github.head_ref }}" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image üèóÔ∏è
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/forum:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.event.action != 'closed') || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    needs: build_and_push
    environment: testing

    steps:
      - name: Setup SSH key üîë
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set IMAGE_TAG ‚öôÔ∏è
        id: set_image_tag
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_TAG=main" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=pr-${{ github.head_ref }}" >> $GITHUB_ENV
          fi

      - name: Set PORT ‚öôÔ∏è
        id: set_port
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "PORT=3000" >> $GITHUB_ENV
          else
            echo "PORT=$((10000 + (${{ github.event.number }} % 100)))" >> $GITHUB_ENV
          fi

      - name: Deploy to VPS üöÄ
        run: |
          CONTAINER_NAME=forum-${{ env.IMAGE_TAG }}
          username="${{ github.event.pull_request.user.login }}"
          DATABASE_SCHEMA="$(echo "$username" | tr -dc '[:alpha:]' | tr '[:upper:]' '[:lower:]')"
          DATABASE_URL=postgresql://${{ secrets.DATABASE_USER }}:{{ secrets.DATABASE_PASSWORD }}@localhost:5432/top22?schema=$DATABASE_SCHEMA
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "\
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/forum:${{ env.IMAGE_TAG }} && \
            docker stop $CONTAINER_NAME || true && \
            docker rm $CONTAINER_NAME || true && \
            docker run -d \
              --name $CONTAINER_NAME \
              --restart always \
              -p ${{ env.PORT }}:3000 \
              -e DATABASE_URL=$DATABASE_URL \
              ${{ secrets.DOCKERHUB_USERNAME }}/forum:${{ env.IMAGE_TAG }}"

  remove_container:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'

    steps:
      - name: Setup SSH key üîë
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Remove container from VPS üóëÔ∏è
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "\
            docker stop forum-pr-${{ github.head_ref }} || true && \
            docker rm forum-pr-${{ github.head_ref }} || true"
